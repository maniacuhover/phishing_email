import streamlit as st
import streamlit.components.v1 as components
import json
from datetime import datetime
import random

# Ensure this is the first Streamlit call
st.set_page_config(page_title="Vaccin Anti-Phishing", page_icon="üõ°Ô∏è", layout="wide")
# La √Ænceputul aplica»õiei, dupƒÉ st.set_page_config
st.markdown("""
<style>
    @media (max-width: 768px) {
        .stHorizontalBlock {
            flex-direction: column;
        }
        .stHorizontalBlock > div {
            width: 100% !important;
        }
        /* AjusteazƒÉ spa»õierea pentru mobile */
        .block-container {
            padding-top: 1rem;
            padding-bottom: 1rem;
        }
    }
</style>
""", unsafe_allow_html=True)


# Load examples from JSON file
@st.cache_data
def load_examples():
    try:
        with open("examples.json", "r", encoding="utf-8") as f:
            return json.load(f)
    except FileNotFoundError:
        return []

# Func»õia de analizƒÉ phishing direct √Æn app_ai.py
def analyze_phishing_email(email_data, email_type):
    """
    AnalizeazƒÉ un email de phishing »ôi identificƒÉ indicatorii de fraudƒÉ
    """
    indicators = []
    
    # Analizarea subiectului
    subject = email_data.get("subject", "").lower()
    if any(word in subject for word in ["urgent", "urgentƒÉ", "imediat", "acum", "alertƒÉ", "aten»õie"]):
        indicators.append({
            "tip": "Ton de urgen»õƒÉ √Æn subiect",
            "detalii": "Emailurile frauduloase folosesc adesea un ton de urgen»õƒÉ pentru a te determina sƒÉ ac»õionezi impulsiv.",
            "exemplu": email_data.get("subject"),
            "risc": "ridicat"
        })  
    
    # Analizarea corpului
    body = email_data.get("body", "").lower()
    
    # Verificarea URL-urilor suspecte
    import re
    urls = re.findall(r'http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\\(\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+', body)
    
    for url in urls:
        suspicious = False
        reasons = []
        
        # URL scurtat
        if any(domain in url for domain in ["bit.ly", "tinyurl", "goo.gl", "t.co"]):
            suspicious = True
            reasons.append("URL scurtat care ascunde destina»õia realƒÉ")
        
        if suspicious:
            indicators.append({
                "tip": "URL suspect",
                "detalii": "Link-ul poate fi fraudulos: " + ", ".join(reasons),
                "exemplu": url,
                "risc": "ridicat"
            })  
    
    # Verificarea solicitƒÉrilor de informa»õii sensibile
    sensitive_patterns = [
        "parolƒÉ", "password", "user", "login", "autentificare", "cont", "card"
    ]
    
    if any(pattern in body for pattern in sensitive_patterns):
        indicators.append({
            "tip": "Solicitare de informa»õii sensibile",
            "detalii": "Emailul cere date confiden»õiale. Companiile legitime nu solicitƒÉ niciodatƒÉ informa»õii sensibile prin email.",
            "exemplu": "Mesajul con»õine termeni ce sugereazƒÉ solicitarea de date confiden»õiale.",
            "risc": "ridicat"
        })  
    
    return {
        "indicators": indicators,
        "total_risk_score": len(indicators),
        "primary_risk": next((ind["tip"] for ind in indicators if ind["risc"] == "ridicat"), "Risc scƒÉzut")
    }  

def highlight_phishing_indicators(email_text, indicators):
    """
    Eviden»õiazƒÉ indicatori de phishing √Æn textul emailului
    
    Args:
        email_text: Textul emailului
        indicators: Lista de indicatori detecta»õi
    
    Returns:
        str: Textul emailului cu eviden»õieri HTML
    """
    highlighted_text = email_text
    
    # Definim stilurile de eviden»õiere
    highlight_styles = {
        "ridicat": "background-color: #ffcccc; border-bottom: 2px solid red; padding: 2px;",
        "mediu": "background-color: #fff2cc; border-bottom: 2px solid orange; padding: 2px;",
        "informativ": "background-color: #e6f3ff; border-bottom: 2px solid blue; padding: 2px;"
    }
    
    # Eviden»õiazƒÉ URL-uri suspecte
    import re
    for indicator in indicators:
        if indicator["tip"] == "URL suspect" and indicator["exemplu"]:
            url = indicator["exemplu"]
            url_pattern = re.escape(url)
            replacement = f'<span style="{highlight_styles["ridicat"]}" title="URL suspect: {indicator["detalii"]}">{url}</span>'
            highlighted_text = re.sub(url_pattern, replacement, highlighted_text)
    
    # Eviden»õiazƒÉ fraze cu ton de urgen»õƒÉ
    urgency_words = ["urgent", "imediat", "acum", "alertƒÉ", "aten»õie", "pericol", "expirƒÉ", "limitat"]
    for word in urgency_words:
        pattern = r'\b' + word + r'\b'
        replacement = f'<span style="{highlight_styles["mediu"]}" title="Ton de urgen»õƒÉ: Poate indica o tentativƒÉ de phishing">{word}</span>'
        highlighted_text = re.sub(pattern, replacement, highlighted_text, flags=re.IGNORECASE)
    
    # Eviden»õiazƒÉ solicitƒÉri de informa»õii sensibile
    sensitive_phrases = [
        "introduce»õi parola", "confirma»õi datele", "actualiza»õi informa»õiile", 
        "verifica»õi contul", "introduce»õi codul", "datele cardului"
    ]
    
    for phrase in sensitive_phrases:
        if phrase.lower() in highlighted_text.lower():
            pattern = re.escape(phrase)
            replacement = f'<span style="{highlight_styles["ridicat"]}" title="Solicitare informa»õii sensibile: Risc ridicat de phishing">{phrase}</span>'
            highlighted_text = re.sub(pattern, replacement, highlighted_text, flags=re.IGNORECASE)
    
    return highlighted_text

# IntegreazƒÉ func»õia direct √Æn app_ai.py
def format_email_html(email_data):
    """
    TransformƒÉ un obiect email √Æntr-un format HTML realist
    
    Args:
        email_data: Dic»õionar cu datele emailului
    
    Returns:
        str: Reprezentarea HTML a emailului
    """
    company_logo = email_data.get("logo", "COMPANIE")
    company_color = email_data.get("colors", "#007bff")
    sender_name = email_data.get("sender", "Expeditor")
    sender_email = email_data.get("sender_email", "expeditor@domain.com")
    subject = email_data.get("subject", "Subiect email")
    body = email_data.get("body", "").replace("\n", "<br>")
    date = email_data.get("date", "01.01.2025")
    footer = email_data.get("footer", "¬© 2025 Companie")
    
    # Construim headerul emailului √Æn stil realist cu design responsiv
    header_html = f"""
    <!DOCTYPE html>
    <html>
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <style>
            @media screen and (max-width: 600px) {{
                .email-container {{
                    width: 100% !important;
                    padding: 0 !important;
                }}
                .email-header {{
                    padding: 10px !important;
                }}
                .email-content {{
                    padding: 10px !important;
                }}
                .email-footer {{
                    padding: 10px !important;
                    font-size: 10px !important;
                }}
                .email-meta td {{
                    display: block;
                    width: 100%;
                }}
                .email-meta td:first-child {{
                    font-weight: bold;
                    padding-bottom: 2px;
                }}
            }}
        </style>
    </head>
    <body style="margin: 0; padding: 0; font-family: Arial, sans-serif;">
    <div class="email-container" style="border: 1px solid #ddd; border-radius: 8px; max-width: 100%; margin-bottom: 20px;">
        <!-- Header -->
        <div class="email-header" style="background-color: {company_color}; color: white; padding: 15px; border-top-left-radius: 8px; border-top-right-radius: 8px;">
            <table width="100%" cellpadding="0" cellspacing="0" border="0">
                <tr>
                    <td><h2 style="margin: 0;">{company_logo}</h2></td>
                    <td align="right" style="font-size: 12px;">
                        {date}
                    </td>
                </tr>
            </table>
        </div>
        
        <!-- Email metadata -->
        <div style="background-color: #f8f9fa; padding: 10px 15px; border-bottom: 1px solid #ddd;">
            <table class="email-meta" width="100%" style="font-size: 13px;" cellpadding="3" cellspacing="0" border="0">
                <tr>
                    <td width="60"><strong>De la:</strong></td>
                    <td>{sender_name} &lt;{sender_email}&gt;</td>
                </tr>
                <tr>
                    <td><strong>CƒÉtre:</strong></td>
                    <td>recipient@example.com</td>
                </tr>
                <tr>
                    <td><strong>Subiect:</strong></td>
                    <td>{subject}</td>
                </tr>
            </table>
        </div>
    """
    
    # Construim corpul emailului cu suport pentru design responsiv
    body_html = f"""
        <!-- Email body -->
        <div class="email-content" style="padding: 15px; line-height: 1.5;">
            {body}
        </div>
    """
    
    # Construim footerul emailului
    footer_html = f"""
        <!-- Footer -->
        <div class="email-footer" style="background-color: #f8f9fa; padding: 10px 15px; font-size: 11px; color: #6c757d; border-top: 1px solid #ddd; border-bottom-left-radius: 8px; border-bottom-right-radius: 8px;">
            {footer}
        </div>
    </div>
    </body>
    </html>
    """
    
    # CombinƒÉm toate componentele
    html = header_html + body_html + footer_html
    
    return html

# Initialize session state defaults
defaults = {
    "score": 0,
    "total": 0,
    "current_index": 0,
    "start_time": datetime.now(),
    "enhanced_ui": True,
    "answered_types": {},
    "quiz_complete": False,
    "current_emails": None,
    "phish_positions": [],
    "just_verified": False,
    "detailed_explanations": True,  # Nou: activeazƒÉ explica»õii detaliate
    "show_indicators": False,  # Nou: aratƒÉ indicatorii de phishing
    "current_analysis": None  # Nou: stocheazƒÉ analiza curentƒÉ
}
for key, value in defaults.items():
    if key not in st.session_state:
        st.session_state[key] = value

# Load data and compute max questions
examples = load_examples()
max_questions = len(examples)

# App header
st.title("üõ°Ô∏è Antrenament Anti-Phishing")
st.markdown(
    """
    #### DezvoltƒÉ-»õi abilitƒÉ»õile de a identifica atacurile online!
    Acest simulator te pregƒÉte»ôte sƒÉ recuno»ôti diverse tipuri de √Æn»ôelƒÉtorii digitale.
    """
)

# Sidebar for metrics and settings
with st.sidebar:
    st.header("Statistici »ôi SetƒÉri")
    st.metric("Scor curent", f"{st.session_state.score}/{st.session_state.total}")
    if st.session_state.total > 0:
        accuracy = st.session_state.score / st.session_state.total
        st.progress(accuracy, f"Acurate»õe: {accuracy*100:.1f}%")
    elapsed = (datetime.now() - st.session_state.start_time).total_seconds()
    minutes, seconds = divmod(int(elapsed), 60)
    st.info(f"Timp petrecut: {minutes}m {seconds}s")

    st.subheader("Progres")
    done = len(st.session_state.answered_types)
    if max_questions > 0:
        st.progress(done / max_questions, f"Progres: {done}/{max_questions} tipuri")
    else:
        st.write("Nicio probƒÉ disponibilƒÉ.")

    st.subheader("SetƒÉri Interfa»õƒÉ")
    st.session_state.enhanced_ui = st.toggle(
        "Interfa»õƒÉ √ÆmbunƒÉtƒÉ»õitƒÉ", value=st.session_state.enhanced_ui
    )
    # AdaugƒÉ dupƒÉ linia cu toggleul "Interfa»õƒÉ √ÆmbunƒÉtƒÉ»õitƒÉ"
    st.session_state.detailed_explanations = st.toggle("Explica»õii detaliate", value=st.session_state.detailed_explanations)

    if st.button("ReseteazƒÉ tot"):
        for key in list(st.session_state.keys()):
            del st.session_state[key]
        st.experimental_rerun()

# Main quiz logic
if st.session_state.quiz_complete:
    # Final report
    st.header("üéì Raport Final")
    sc, tot = st.session_state.score, st.session_state.total
    percent = (sc/tot*100) if tot > 0 else 0
    st.subheader(f"Scor final: {sc}/{tot} ({percent:.1f}%)")
    elapsed = (datetime.now() - st.session_state.start_time).total_seconds()
    m, s = divmod(int(elapsed), 60)
    st.info(f"Timp total: {m}m {s}s")

    # Table of results
    results = []
    for ph_type, info in st.session_state.answered_types.items():
        results.append({
            "Tip phishing": ph_type,
            "Corect": "‚úÖ" if info["correct"] else "‚ùå",
            "Explica»õie": info["explanation"]
        })
    st.table(results)

    # Highlight wrong answers with advice
    wrong = [t for t, inf in st.session_state.answered_types.items() if not inf["correct"]]
    if wrong:
        st.markdown("**Aten»õie! La urmƒÉtoarele tipuri ai rƒÉspuns gre»ôit:**")
        for t in wrong:
            st.markdown(f"- {t}")
        st.markdown(
            "**Sfaturi pentru viitor:** VerificƒÉ √Æntotdeauna link-urile »ôi tonul urgent, asigurƒÉ-te cƒÉ domeniul expeditorului este legitim."
        )
    else:
        st.success("FelicitƒÉri! Ai identificat corect toate tipurile de phishing.")

    if st.button("Reia testul", use_container_width=True):
        for key in list(st.session_state.keys()):
            del st.session_state[key]
        st.experimental_rerun()

else:
    # Quiz in progress
    if st.session_state.current_emails is None:
        # Select next question
        remaining = [i for i in range(max_questions)
                     if examples[i]["type"] not in st.session_state.answered_types]
        if not remaining or st.session_state.total >= max_questions:
            st.session_state.quiz_complete = True
            st.experimental_rerun()
        idx = random.choice(remaining)
        st.session_state.current_index = idx
        current = examples[idx]

        # Build email dicts
        real = {"subject": current["real"]["subject"], "body": current["real"]["body"]}
        fake = {"subject": current["fake"]["subject"], "body": current["fake"]["body"]}

        # Alternate phishing position
        if not st.session_state.phish_positions:
            seq = [True, False] * ((max_questions//2) + 1)
            random.shuffle(seq)
            st.session_state.phish_positions = seq
        left = st.session_state.phish_positions.pop(0)
        pair = [(fake, True), (real, False)] if left else [(real, False), (fake, True)]

        st.session_state.current_emails = pair
        phish_email = fake
        st.session_state.current_analysis = analyze_phishing_email(phish_email, current["type"])
        st.session_state.just_verified = False

    else:
        pair = st.session_state.current_emails
        current = examples[st.session_state.current_index]

    # Display emails side-by-side
    st.header(f"Tip: {current['type']}")
    col1, col2 = st.columns(2)
    for i, (email, _) in enumerate(pair):
        with (col1 if i == 0 else col2):
            st.subheader(f"Mesaj #{i+1}")
            # ModificƒÉ sec»õiunea unde afi»ôezi emailurile cu components.html:
            if st.session_state.enhanced_ui:
                lines = email['body'].count("\n") + 5
                height = min(600, 100 + lines * 30)
                
                # AdaugƒÉ o clasƒÉ diferitƒÉ pentru mobile vs desktop
                components.html(
                    format_email_html(email), 
                    height=height, 
                    scrolling=True
                )
            else:
                st.text_area("Subiect:", email['subject'], height=50, disabled=True)
                st.text_area("", email['body'], height=200, disabled=True)

    # User answer selection
    choice = st.selectbox("Care mesaj este phishing?", ["", "Mesaj #1", "Mesaj #2"], index=0)
    if choice:
        if st.button("VerificƒÉ rƒÉspunsul", use_container_width=True):
            sel = 0 if choice == "Mesaj #1" else 1
            correct = pair[sel][1]
            st.session_state.total += 1
            if correct:
                st.session_state.score += 1
                st.success("‚úÖ Corect!")
            else:
                st.error("‚ùå Gre»ôit!")
            corr = 'Mesaj #1' if pair[0][1] else 'Mesaj #2'
            st.info(f"RƒÉspuns corect: {corr}")
            st.markdown(f"**Explica»õie:** {current['explanation']}")
            
            # Nou: Afi»ôare analizƒÉ detaliatƒÉ dacƒÉ este activatƒÉ
            if st.session_state.detailed_explanations:
                st.session_state.show_indicators = True
                st.subheader("AnalizƒÉ detaliatƒÉ a emailului de phishing")
                
                # GƒÉse»ôte emailul de phishing
                phish_index = 0 if pair[0][1] else 1
                phish_data = pair[phish_index][0]
                
                # Afi»ôeazƒÉ indicatorii de phishing
                analysis = st.session_state.current_analysis
                
                # AratƒÉ scorul de risc
                risk_score = analysis["total_risk_score"]
                risk_level = "ScƒÉzut" if risk_score < 5 else "Mediu" if risk_score < 10 else "Ridicat"
                risk_color = "#4CAF50" if risk_score < 5 else "#FF9800" if risk_score < 10 else "#F44336"
                
                st.markdown(f"""
                <div style="border-radius: 5px; padding: 10px; background-color: {risk_color}; color: white; margin-bottom: 15px;">
                    <h3 style="margin: 0;">Nivel de risc: {risk_level}</h3>
                    <p style="margin: 5px 0 0 0;">Indicator principal: {analysis["primary_risk"]}</p>
                </div>
                """, unsafe_allow_html=True)
                
                # ListeazƒÉ to»õi indicatorii identifica»õi
                st.markdown("### Indicatori de phishing identifica»õi")
                
                # CreƒÉm un tabel pentru indicatori
                indicators_data = []
                for ind in analysis["indicators"]:
                    if ind["risc"] != "informativ":
                        indicators_data.append({
                            "Indicator": ind["tip"],
                            "Detalii": ind["detalii"],
                            "Exemplu": ind["exemplu"],
                            "Nivel de risc": ind["risc"].capitalize()
                        })
                
                if indicators_data:
                    st.table(indicators_data)
                else:
                    st.info("Nu au fost identifica»õi indicatori specifici de phishing.")
                
                # Afi»ôƒÉm emailul cu indicatori eviden»õia»õi
                st.markdown("### Email cu elemente suspecte eviden»õiate")
                
                # PregƒÉtim con»õinutul eviden»õiat
                if analysis["indicators"]:
                    highlighted_body = highlight_phishing_indicators(phish_data["body"], analysis["indicators"])
                    highlighted_subject = highlight_phishing_indicators(phish_data["subject"], analysis["indicators"])
                    
                    phish_data_highlighted = {
                        "subject": highlighted_subject,
                        "body": highlighted_body,
                        "sender": phish_data.get("sender", "Expeditor"),
                        "sender_email": phish_data.get("sender_email", "expeditor@domain.com"),
                        "logo": phish_data.get("logo", "LOGO"),
                        "colors": phish_data.get("colors", "#F44336"),  # Ro»ôu pentru phishing
                        "footer": phish_data.get("footer", "¬© Email de phishing - Utilizat √Æn scopuri educa»õionale"),
                        "date": phish_data.get("date", datetime.now().strftime("%d.%m.%Y"))
                    }
                    
                    components.html(format_email_html(phish_data_highlighted), height=400, scrolling=True)
                
                # Sfaturi specifice pentru acest tip de phishing
                st.markdown("### Cum te protejezi √Æmpotriva acestui tip de phishing")
                
                tips_by_type = {
                    "Email-phishing clasic": [
                        "VerificƒÉ adresa exactƒÉ a expeditorului, nu doar numele afi»ôat",
                        "Nu face click pe link-uri din emailuri nesolicitate",
                        "Trecerea mouse-ului peste link-uri √Æ»õi permite sƒÉ vezi URL-ul real",
                        "VerificƒÉ gre»ôelile gramaticale »ôi formulƒÉrile neobi»ônuite"
                    ],
                    "Spear-phishing": [
                        "VerificƒÉ contextul »ôi istoricul conversa»õiilor anterioare",
                        "ConfirmƒÉ prin alt canal de comunicare solicitƒÉrile neobi»ônuite",
                        "Fii atent la tonul »ôi formulƒÉrile diferite de cele obi»ônuite",
                        "VerificƒÉ adresa de email cu aten»õie, chiar dacƒÉ pare de la un cunoscut"
                    ]
                    # Vei adƒÉuga restul tipurilor aici
                }
                
                # Afi»ôeazƒÉ sfaturile specifice tipului de phishing
                if current["type"] in tips_by_type:
                    for tip in tips_by_type[current["type"]]:
                        st.markdown(f"‚úÖ {tip}")
                else:
                    # Sfaturi generale
                    st.markdown("""
                    ‚úÖ VerificƒÉ atent adresa expeditorului »ôi URL-urile
                    ‚úÖ Nu furniza niciodatƒÉ date sensibile prin email
                    ‚úÖ Folose»ôte autentificarea √Æn doi factori
                    ‚úÖ AcceseazƒÉ direct site-urile web, nu prin link-uri din email
                    """)
                    
            st.session_state.answered_types[current['type']] = {
                'correct': correct,
                'explanation': current['explanation']
            }
            # Prepare next
            st.session_state.current_emails = None
            st.session_state.just_verified = True
    
    # Next example button
    if st.session_state.just_verified and st.button("UrmƒÉtorul exemplu", use_container_width=True):
        st.session_state.current_emails = None
        st.session_state.just_verified = False
        st.experimental_rerun()

# Educational sections
with st.expander("Sfaturi detectare phishing"):
    st.markdown("""
    ### Ghid complet pentru detectarea emailurilor de phishing:
    
    #### 1. VerificƒÉ expeditorul üìß
    * AnalizeazƒÉ adresa de email completƒÉ, nu doar numele afi»ôat
    * VerificƒÉ pentru gre»ôeli subtile (de ex., amazon-secure.com √Æn loc de amazon.com)
    * ObservƒÉ domeniile neobi»ônuite (.xyz, .info, .online √Æn loc de .com, .ro, .org)
    
    #### 2. AnalizeazƒÉ link-urile üîç
    * Trecerea cursorului peste link-uri √Æ»õi permite sƒÉ vezi URL-ul real
    * EvitƒÉ sƒÉ dai click pe URL-uri scurte (bit.ly, tinyurl, etc.)
    * AcceseazƒÉ site-urile oficiale scriind manual adresa √Æn browser, nu prin link-uri
    * VerificƒÉ prezen»õa HTTPS »ôi a certificatului de securitate
    
    #### 3. Aten»õie la tonul de urgen»õƒÉ ‚ö†Ô∏è
    * Emailurile de phishing creeazƒÉ un sentiment de panicƒÉ sau urgen»õƒÉ
    * Frazele precum "ac»õioneazƒÉ acum", "urgent", "contul va fi suspendat" sunt alarmante
    * Deciziile luate sub presiune sunt adesea gre»ôite - ia-»õi timp sƒÉ verifici
    
    #### 4. Nu furniza date sensibile üîí
    * Institu»õiile legitime nu solicitƒÉ niciodatƒÉ parole sau date de card pe email
    * Nu descƒÉrca ata»ôamente nea»ôteptate - pot con»õine malware
    * DacƒÉ se cere autentificare, mergi direct pe site-ul oficial
    
    #### 5. ActiveazƒÉ securitatea suplimentarƒÉ üõ°Ô∏è
    * Folose»ôte autentificarea √Æn doi factori (2FA) pentru toate conturile importante
    * UtilizeazƒÉ parole unice pentru fiecare cont »ôi un manager de parole
    * Men»õine software-ul actualizat pentru a te proteja de vulnerabilitƒÉ»õi
    
    #### 6. VerificƒÉ gre»ôelile gramaticale »ôi de formatare üìù
    * Emailurile de phishing con»õin adesea gre»ôeli gramaticale sau de formatare
    * Calitatea slabƒÉ a imaginilor sau logo-uri deformate pot indica un email fals
    * Inconsisten»õele √Æn formatare sau fonturi diferite √Æn acela»ôi email sunt suspecte
    """)

with st.expander("Exemple recente"):
    st.markdown("""
    ### Tactici recente de phishing (2025):
    
    #### üì± Phishing prin QR code
    * Emailuri false de livrare cu coduri QR care te duc pe site-uri mali»õioase
    * Oferte care necesitƒÉ scanarea unui cod QR pentru "verificarea identitƒÉ»õii"
    
    #### ü§ñ Deepfake »ôi AI phishing
    * Emailuri ce imitƒÉ perfect stilul de comunicare al colegilor sau »ôefilor
    * Mesaje generate cu AI care par foarte credibile »ôi personalizate
    
    #### üìÑ Documente colaborative false
    * Invita»õii false pentru documente Google Workspace sau Microsoft Office
    * SolicitƒÉri de colaborare care cer reautentificare sau descƒÉrcarea de "actualizƒÉri"
    
    #### ‚òÅÔ∏è Cloud storage phishing
    * NotificƒÉri false despre depƒÉ»ôirea spa»õiului de stocare √Æn cloud
    * Alerte de securitate false care solicitƒÉ resetarea parolei
    
    #### üè¶ Phishing bancar sofisticat
    * Copii aproape perfecte ale site-urilor bancare legitime
    * NotificƒÉri false de tranzac»õii suspecte ce solicitƒÉ verificare imediatƒÉ
    
    #### üìä Atacuri de spear-phishing corporative
    * Emailuri care imitƒÉ platforme de colaborare precum Teams sau Slack
    * Mesaje care par a fi de la departamentul IT solicit√¢nd actualizƒÉri de securitate
    """)
    with st.expander("Despre proiect"):
    st.markdown("""
    ### Despre Simulatorul Anti-Phishing
    
    **Simulatorul Anti-Phishing** este o platformƒÉ educa»õionalƒÉ interactivƒÉ conceputƒÉ pentru a √ÆmbunƒÉtƒÉ»õi abilitƒÉ»õile utilizatorilor de a identifica »ôi evita atacurile de phishing.
    
    #### Obiective educa»õionale:
    * Cre»ôterea gradului de con»ôtientizare privind amenin»õƒÉrile cibernetice
    * Dezvoltarea abilitƒÉ»õilor practice de identificare a emailurilor de phishing
    * Formarea de reflexe digitale sƒÉnƒÉtoase pentru o navigare sigurƒÉ online
    
    #### Caracteristici:
    * Exemple realiste bazate pe tehnici moderne de phishing
    * AnalizƒÉ detaliatƒÉ a indicatorilor de risc
    * Feedback personalizat »ôi recomandƒÉri de √ÆmbunƒÉtƒÉ»õire
    * Interfa»õƒÉ intuitivƒÉ »ôi responsivƒÉ
    
    #### Date tehnice:
    * Versiune: 2.1.0
    * Dezvoltat cu: Python, Streamlit
    * Toate exemplele sunt create √Æn scop educa»õional
    * Actualizat: Aprilie 2025
    
    #### Men»õiuni legale:
    Toate exemplele de phishing prezentate sunt fictive »ôi create exclusiv √Æn scop educa»õional. Orice asemƒÉnare cu emailuri reale este √Ænt√¢mplƒÉtoare. Acest simulator nu colecteazƒÉ date personale »ôi nu √ÆncurajeazƒÉ practicarea atacurilor de phishing.
    
    ¬© 2025 Simulatorul Anti-Phishing | Codul sursƒÉ disponibil sub licen»õƒÉ GNU GPL-3.0
    """)

# Footer
st.markdown("---")
st.markdown("¬© 2025 Anti-Phishing Simulator")
